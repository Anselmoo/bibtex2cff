[tool.poetry]
name = "bibtex2cff"
version = "0.2.0"
description = "Converting Bibtex to CITATION.cff fileformat"
authors = ["Anselm Hahn <anselm.hahn@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "bibtex2cff", from = "src" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: LaTeX",
]
keywords = ["bibtex", "cff", "citation", "citation-file-format"]


    [tool.poetry.dependencies]
    python = "^3.8.1"
    bibtexparser = "^1.4.0"
    pydantic = { extras = ["email"], version = "^1.10.7" }
    pyyaml = "^6.0"


    [tool.poetry.group.dev.dependencies]
    pytest = "^7.3.1"
    pytest-cov = "^4.0.0"
    flake8 = "^6.0.0"
    black = "^23.3.0"
    isort = "^5.12.0"
    mypy = "^1.3.0"
    pydocstyle = "^6.3.0"
    pylint = "^2.17.4"
    bandit = "^1.7.5"
    types-pyyaml = "^6.0.12.10"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
bibtex2cff = "bibtex2cff.cmd:main"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
extend-ignore = ["B008"]
max-line-length = 88

[tool.pytest]
addopts = [
    "--cov=poetry",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=xml",

]

[tool.mypy]
plugins = "pydantic.mypy"
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
pretty = true
show_error_context = true
show_error_codes = true


[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
warn_unused_configs = true

[tool.pydocstyle]
convention = "google"
